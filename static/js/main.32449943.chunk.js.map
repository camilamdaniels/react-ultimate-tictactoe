{"version":3,"sources":["logo.svg","Cell.js","UltimateBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","handleClick","bind","event","this","showValue","console","log","value","className","onClick","Component","CURR_PLAYER","PLAYING","UltimateBoard","state","ultimateBoard","createUltimateBoard","winner","ultimateGameOver","i","j","board","N_COLS","N_ROWS","setState","findUltimateWinner","row","length","currRow","col","push","every","v","currCol","leftDiag","rightDiag","boards","markBoard","defaultProps","BOARD_SIZE","Board","createBoard","currPlayer","gameOver","findWinner","togglePlayer","cells","markCell","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32449943.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nclass Cell extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t} \r\n\r\n\r\n\thandleClick(event) {\r\n\t\tthis.props.showValue()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"Cell props: \"+this.props.value)\r\n\t\treturn(\r\n\t\t\t<div className=\"Cell\" onClick={this.handleClick}>\r\n\t\t\t\t{this.props.value === '-' ? null : this.props.value}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport './UltimateBoard.css';\r\nimport './Board.css';\r\n\r\nlet CURR_PLAYER = \"\";\r\nlet PLAYING = false;\r\n\r\nclass UltimateBoard extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9,\r\n\t\tN_ROWS: 3,\r\n\t\tN_COLS: 3\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tultimateBoard: this.createUltimateBoard(),\r\n\t\t\twinner: \"\",\r\n\t\t\tultimateGameOver: false\r\n\t\t}\r\n\t}\r\n\r\n\tmarkBoard(i, j) {\r\n\r\n\t\tconsole.log(this.state.ultimateBoard)\r\n\t\t// console.log(this.props.winner)\r\n\r\n\t\tif (this.state.ultimateGameOver) return;\r\n\r\n\t\tlet board = this.state.ultimateBoard;\r\n\r\n\t\tif (j >= 0 && j < this.props.N_COLS && i >= 0 && i < this.props.N_ROWS && !PLAYING) {\r\n\t\t\tboard[i][j] = CURR_PLAYER\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tultimateBoard: board\r\n\t\t})\r\n\r\n\t\tthis.findUltimateWinner()\r\n\t}\r\n\r\n\tfindUltimateWinner() {\r\n\t\tif (this.state.ultimateGameOver) return;\r\n\r\n\t\tlet winner = '';\r\n\t\tconst board = this.state.ultimateBoard;\r\n\r\n\t\t// check rows\r\n\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\tlet currRow = [];\r\n\t\t\tfor (let col = 0; col < board[row].length; col++) {\r\n\t\t\t\tcurrRow.push(board[row][col])\r\n\t\t\t}\r\n\t\t\tif (currRow.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currRow.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check cols\r\n\t\tfor (let col = 0; col < board[0].length; col++) {\r\n\t\t\tlet currCol = [];\r\n\t\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\t\tcurrCol.push(board[row][col]);\r\n\t\t\t}\r\n\t\t\tif (currCol.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currCol.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check left diagonal\r\n\t\tlet leftDiag = [];\r\n\t\tfor (let row = 0, col = 0; row < board.length, col < board.length; row++, col++) {\r\n\t\t\tleftDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (leftDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (leftDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\t// check right diagonal\r\n\t\tlet rightDiag = [];\r\n\t\tfor (let row = 0, col = board.length - 1; row < board.length, col >= 0; row++, col--) {\r\n\t\t\trightDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (rightDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (rightDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\tif (!this.state.winner) {\r\n\t\t\tthis.setState({\r\n\t\t\t\twinner: winner\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// if (this.state.winner) {\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tultimateGameOver: true\r\n\t\t// \t})\r\n\t\t// }\r\n\r\n\t\t// console.log(this.state.winner)\r\n\t}\r\n\r\n\tcreateUltimateBoard() {\r\n\t\tlet board = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push('-');\r\n\t\t\t}\r\n\t\t\tboard.push(row);\r\n\t\t}\r\n\r\n\t\treturn board;\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconsole.log(\"Board props: \"+this.props.winner)\r\n\r\n\t\tif (this.state.winner) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"UltimateBoard UltimateBoard-winner\">GAME OVER! {this.state.winner} WON!</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlet boards = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push(<Board key={`${i}-${j}`} value={this.state.ultimateBoard[i][j]} showValue={() => this.markBoard(i, j)} winner={this.state.winner}/>)\r\n\t\t\t}\r\n\t\t\tboards.push(<div key={i}>{row}</div>)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"UltimateBoard\">\r\n\t\t\t\t<h1 className=\"UltimateBoard-title\">Ultimate Tic-Tac-Toe</h1>\r\n\t\t\t\t<div className=\"UltimateBoard-container\">\r\n\t\t\t\t\t<div className=\"UltimateBoard-grid\">\r\n\t\t\t\t\t\t{boards}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UltimateBoard;\r\n\r\nclass Board extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9,\r\n\t\tN_ROWS: 3,\r\n\t\tN_COLS: 3\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tCURR_PLAYER = !CURR_PLAYER ? \"X\" : CURR_PLAYER\r\n\r\n\t\tthis.state = {\r\n\t\t\tboard: this.createBoard(),\r\n\t\t\tcurrPlayer: CURR_PLAYER,\r\n\t\t\twinner: \"\",\r\n\t\t\tgameOver: false\r\n\t\t}\r\n\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t}\r\n\r\n\thandleClick(event) {\r\n\t\tthis.props.showValue()\r\n\t}\r\n\r\n\tmarkCell(i, j) {\r\n\r\n\t\tif (this.state.gameOver) return;\r\n\r\n\t\tPLAYING = true;\r\n\r\n\t\tlet board = this.state.board;\r\n\r\n\t\tif (j >= 0 && j < this.props.N_COLS && i >= 0 && i < this.props.N_ROWS) {\r\n\t\t\tboard[i][j] = this.state.currPlayer\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tboard: board\r\n\t\t})\r\n\r\n\t\tthis.findWinner()\r\n\r\n\t\tthis.togglePlayer()\r\n\r\n\t\t\r\n\t}\r\n\r\n\tfindWinner() {\r\n\t\tif (this.state.gameOver) return;\r\n\r\n\t\tlet winner = '';\r\n\t\tconst board = this.state.board;\r\n\r\n\t\t// check rows\r\n\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\tlet currRow = [];\r\n\t\t\tfor (let col = 0; col < board[row].length; col++) {\r\n\t\t\t\t\tcurrRow.push(board[row][col])\r\n\t\t\t}\r\n\t\t\tif (currRow.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currRow.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check cols \r\n\t\tfor (let col = 0; col < board[0].length; col++) {\r\n\t\t\tlet currCol = [];\r\n\t\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\t\tcurrCol.push(board[row][col]);\r\n\t\t\t}\r\n\t\t\tif (currCol.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currCol.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check left diagonal\r\n\t\tlet leftDiag = [];\r\n\t\tfor (let row = 0, col = 0; row < board.length, col < board.length; row++, col++) {\r\n\t\t\t\tleftDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (leftDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (leftDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\t// check right diagonal\r\n\t\tlet rightDiag = [];\r\n\t\tfor (let row = 0, col = board.length - 1; row < board.length, col >= 0; row++, col--) {\r\n\t\t\trightDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (rightDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (rightDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\tif (winner) {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\twinner: winner,\r\n\t\t\t\tgameOver: true\r\n\t\t\t})\r\n\r\n\t\t\tPLAYING = false\r\n\t\t}\r\n\r\n\t\t// if (this.state.winner) {\r\n\t\t// \tPLAYING = false\r\n\r\n\t\t// \t// this.setState({\r\n\t\t// \t// \tgameOver: true\r\n\t\t// \t// })\r\n\t\t// }\r\n\r\n\t\t// console.log(this.state.winner)\r\n\t}\r\n\r\n\ttogglePlayer() {\r\n\t\t// CURR_PLAYER = (CURR_PLAYER === \"X\") ? \"O\" : \"X\"\r\n\r\n\t\t// this.setState({\r\n\t\t// \tcurrPlayer: CURR_PLAYER\r\n\t\t// })\r\n\r\n\t\t(this.state.currPlayer === \"X\" ? \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"O\"\r\n\t\t\t\t}) : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"X\"\r\n\t\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tcreateBoard() {\r\n\t\tlet board = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push('-');\r\n\t\t\t}\r\n\t\t\tboard.push(row);\r\n\t\t} \r\n\r\n\t\treturn board;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.gameOver) {\r\n\t\t\treturn (\r\n\t\t\t\t\t<div className=\"Board Board-winner\">{this.state.winner}</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlet cells = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push(\r\n\t\t\t\t\t<Cell key={`${i}-${j}`}value={this.state.board[i][j]} showValue={() => this.markCell(i, j)}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcells.push(<div key={i}>{row}</div>)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"Board Board-grid\" onClick={this.handleClick}>\r\n\t\t\t\t{this.props.winner === \"\" ? cells : this.props.winner}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport UltimateBoard from './UltimateBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <UltimateBoard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}