{"version":3,"sources":["logo.svg","Cell.js","Board.js","UltimateBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","handleClick","bind","event","this","showValue","className","onClick","value","Component","Board","state","board","createBoard","currPlayer","winner","i","j","N_COLS","N_ROWS","setState","togglePlayer","findWinner","row","console","log","every","val","col","push","diag","cells","markCell","defaultProps","BOARD_SIZE","UltimateBoard","boards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ff1789.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nclass Cell extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t} \r\n\r\n\r\n\thandleClick(event) {\r\n\t\tthis.props.showValue()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"Cell\" onClick={this.handleClick}>\r\n\t\t\t\t{this.props.value}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport './Board.css'\r\n\r\nclass Board extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9,\r\n\t\tN_ROWS: 3,\r\n\t\tN_COLS: 3\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tboard: this.createBoard(),\r\n\t\t\tcurrPlayer: \"X\",\r\n\t\t\twinner: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tmarkCell(i, j) {\r\n\r\n\t\tlet board = this.state.board;\r\n\r\n\t\tif (j >= 0 && j < this.props.N_COLS && i >= 0 && i < this.props.N_ROWS) {\r\n\t\t\tboard[i][j] = this.state.currPlayer\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tboard: board\r\n\t\t})\r\n\r\n\t\tthis.togglePlayer()\r\n\r\n\t\tthis.findWinner()\r\n\t}\r\n\r\n\tfindWinner() {\r\n\t\tlet winner;\r\n\t\t// check rows\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = this.state.board[i];\r\n\t\t\tconsole.log(\"this is a row: \"+row)\r\n\t\t\tif (row => row.every(val => val === row[0])) winner = row[0];\r\n\t\t}\r\n\r\n\t\t// check columns\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet col = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\tcol.push(this.state.board[i][j])\r\n\t\t\t}\r\n\t\t\tif (col => col.every(val => val === col[0])) winner = col[0];\r\n\t\t}\r\n\r\n\t\t// check diagonals\r\n\t\tfor (let i = 0, j = 0; i < this.props.N_ROWS, j < this.props.N_COLS; i++, j++) {\r\n\t\t\tlet diag = [];\r\n\t\t\tdiag.push(this.state.board[i][j])\r\n\t\t\tif (diag => diag.every(val => val === diag[0])) winner = diag[0];\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, j = this.props.N_COLS - 1; i < this.props.N_ROWS, j >= 0; i++, j--) {\r\n\t\t\tlet diag = [];\r\n\t\t\tdiag.push(this.state.board[i][j])\r\n\t\t\tif (diag => diag.every(val => val === diag[0])) winner = diag[0];\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\twinner: winner\r\n\t\t})\r\n\r\n\t\tconsole.log(this.state.winner)\r\n\t}\r\n\r\n\ttogglePlayer() {\r\n\t\t(this.state.currPlayer === \"X\" ? \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"O\"\r\n\t\t\t\t}) : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"X\"\r\n\t\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tcreateBoard() {\r\n\t\tlet board = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tboard.push(row);\r\n\t\t} \r\n\r\n\t\treturn board;\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet cells = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push(\r\n\t\t\t\t\t<Cell value={this.state.board[i][j]} showValue={() => this.markCell(i, j)}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcells.push(<div>{row}</div>)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"Board-grid\">{cells}</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport Board from './Board'\r\nimport './UltimateBoard.css'\r\n\r\nclass UltimateBoard extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet boards = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.BOARD_SIZE; i++) {\r\n\t\t\tboards.push(<Board />)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"UltimateBoard\">\r\n\t\t\t\t<h1 className=\"UltimateBoard-title\">Ultimate Tic-Tac-Toe</h1>\r\n\t\t\t\t<div className=\"UltimateBoard-container\">\r\n\t\t\t\t\t<div className=\"UltimateBoard-grid\">\r\n\t\t\t\t\t\t{boards}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UltimateBoard;","import logo from './logo.svg';\nimport './App.css';\nimport UltimateBoard from './UltimateBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <UltimateBoard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}