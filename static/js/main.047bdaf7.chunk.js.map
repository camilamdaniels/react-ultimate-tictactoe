{"version":3,"sources":["logo.svg","Cell.js","Board.js","UltimateBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","handleClick","bind","event","this","showValue","className","onClick","value","Component","Board","state","board","createBoard","currPlayer","winner","gameOver","i","j","N_COLS","N_ROWS","setState","togglePlayer","findWinner","row","length","currRow","col","push","every","v","currCol","leftDiag","rightDiag","console","log","cells","markCell","defaultProps","BOARD_SIZE","UltimateBoard","boards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAe,I,uDCyBAA,E,kDApBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHD,E,+CAOnB,SAAYC,GACXC,KAAKJ,MAAMK,c,oBAGZ,WACC,OACC,qBAAKC,UAAU,OAAOC,QAASH,KAAKH,YAApC,SACuB,MAArBG,KAAKJ,MAAMQ,MAAgB,KAAOJ,KAAKJ,MAAMQ,Y,GAhB/BC,aCCbC,G,wDAQL,WAAYV,GAAQ,IAAD,8BAClB,cAAMA,IAEDW,MAAQ,CACZC,MAAO,EAAKC,cACZC,WAAY,IACZC,OAAQ,GACRC,UAAU,GAPO,E,4CAWnB,SAASC,EAAGC,GAEX,IAAId,KAAKO,MAAMK,SAAf,CAEA,IAAIJ,EAAQR,KAAKO,MAAMC,MAEnBM,GAAK,GAAKA,EAAId,KAAKJ,MAAMmB,QAAUF,GAAK,GAAKA,EAAIb,KAAKJ,MAAMoB,SAC/DR,EAAMK,GAAGC,GAAKd,KAAKO,MAAMG,YAG1BV,KAAKiB,SAAS,CACbT,MAAOA,IAGRR,KAAKkB,eAELlB,KAAKmB,gB,wBAGN,WACC,IAAInB,KAAKO,MAAMK,SAAf,CAMA,IAJA,IAAID,EAAS,GACPH,EAAQR,KAAKO,MAAMC,MAGhBY,EAAM,EAAGA,EAAMZ,EAAMa,OAAQD,IAAO,CAE5C,IADA,IAAIE,EAAU,GACLC,EAAM,EAAGA,EAAMf,EAAMY,GAAKC,OAAQE,IACzCD,EAAQE,KAAKhB,EAAMY,GAAKG,IAEtBD,EAAQG,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KACxCW,EAAQG,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KAI7C,IAAK,IAAIY,EAAM,EAAGA,EAAMf,EAAM,GAAGa,OAAQE,IAAO,CAE/C,IADA,IAAII,EAAU,GACLP,EAAM,EAAGA,EAAMZ,EAAMa,OAAQD,IACrCO,EAAQH,KAAKhB,EAAMY,GAAKG,IAErBI,EAAQF,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KACxCgB,EAAQF,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KAK7C,IADA,IAAIiB,EAAW,GACNR,EAAM,EAAGG,EAAM,EAASf,EAAMa,OAAQE,EAAMf,EAAMa,OAAQD,IAAOG,IACxEK,EAASJ,KAAKhB,EAAMY,GAAKG,IAEvBK,EAASH,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KACzCiB,EAASH,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KAI7C,IADA,IAAIkB,EAAY,GACPT,EAAM,EAAGG,EAAMf,EAAMa,OAAS,EAASb,EAAMa,OAAQE,GAAO,EAAGH,IAAOG,IAC9EM,EAAUL,KAAKhB,EAAMY,GAAKG,IAEvBM,EAAUJ,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KAC1CkB,EAAUJ,OAAM,SAAAC,GAAC,MAAU,MAANA,OAAYf,EAAS,KAEzCX,KAAKO,MAAMI,QACfX,KAAKiB,SAAS,CACbN,OAAQA,IAINX,KAAKO,MAAMI,QACdX,KAAKiB,SAAS,CACbL,UAAU,IAIZkB,QAAQC,IAAI/B,KAAKO,MAAMI,W,0BAGxB,WAC4B,MAA1BX,KAAKO,MAAMG,WACVV,KAAKiB,SAAS,CACbP,WAAY,MAEbV,KAAKiB,SAAS,CACbP,WAAY,Q,yBAKhB,WAGC,IAFA,IAAIF,EAAQ,GAEHK,EAAI,EAAGA,EAAIb,KAAKJ,MAAMoB,OAAQH,IAAK,CAE3C,IADA,IAAIO,EAAM,GACDN,EAAI,EAAGA,EAAId,KAAKJ,MAAMmB,OAAQD,IACtCM,EAAII,KAAK,KAEVhB,EAAMgB,KAAKJ,GAGZ,OAAOZ,I,oBAGR,WAAU,IAAD,OACR,GAAIR,KAAKO,MAAMK,SACd,OACE,qBAAKV,UAAU,qBAAf,SAAqCF,KAAKO,MAAMI,SAMnD,IAFA,IAAIqB,EAAQ,GAPJ,WASCnB,GAER,IADA,IAAIO,EAAM,GAVH,WAWEN,GACRM,EAAII,KACH,cAAC,EAAD,CAAMpB,MAAO,EAAKG,MAAMC,MAAMK,GAAGC,GAAIb,UAAW,kBAAM,EAAKgC,SAASpB,EAAGC,QAFhEA,EAAI,EAAGA,EAAI,EAAKlB,MAAMmB,OAAQD,IAAM,EAApCA,GAKTkB,EAAMR,KAAK,8BAAMJ,MAPTP,EAAI,EAAGA,EAAIb,KAAKJ,MAAMoB,OAAQH,IAAM,EAApCA,GAUT,OACC,qBAAKX,UAAU,mBAAf,SAAmC8B,Q,GA5IlB3B,cAAdC,EAEE4B,aAAe,CACrBC,WAAY,EACZnB,OAAQ,EACRD,OAAQ,GA4IKT,QCjJT8B,G,wDAML,WAAYxC,GAAQ,uCACbA,G,0CAGP,WAIC,IAFA,IAAIyC,EAAS,GAEJxB,EAAI,EAAGA,EAAIb,KAAKJ,MAAMuC,WAAYtB,IAC1CwB,EAAOb,KAAK,cAAC,EAAD,KAGb,OACC,sBAAKtB,UAAU,gBAAf,UACC,oBAAIA,UAAU,sBAAd,kCACA,qBAAKA,UAAU,0BAAf,SACC,qBAAKA,UAAU,qBAAf,SACEmC,a,GAvBqBhC,cAAtB+B,EAEEF,aAAe,CACrBC,WAAY,GA4BCC,QCvBAE,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.047bdaf7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './Cell.css';\r\n\r\nclass Cell extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t} \r\n\r\n\r\n\thandleClick(event) {\r\n\t\tthis.props.showValue()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"Cell\" onClick={this.handleClick}>\r\n\t\t\t\t{this.props.value === '-' ? null : this.props.value}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport './Board.css'\r\n\r\nclass Board extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9,\r\n\t\tN_ROWS: 3,\r\n\t\tN_COLS: 3\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tboard: this.createBoard(),\r\n\t\t\tcurrPlayer: \"X\",\r\n\t\t\twinner: \"\",\r\n\t\t\tgameOver: false\r\n\t\t}\r\n\t}\r\n\r\n\tmarkCell(i, j) {\r\n\r\n\t\tif (this.state.gameOver) return;\r\n\r\n\t\tlet board = this.state.board;\r\n\r\n\t\tif (j >= 0 && j < this.props.N_COLS && i >= 0 && i < this.props.N_ROWS) {\r\n\t\t\tboard[i][j] = this.state.currPlayer\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tboard: board\r\n\t\t})\r\n\r\n\t\tthis.togglePlayer()\r\n\r\n\t\tthis.findWinner()\r\n\t}\r\n\r\n\tfindWinner() {\r\n\t\tif (this.state.gameOver) return;\r\n\r\n\t\tlet winner = '';\r\n\t\tconst board = this.state.board;\r\n\r\n\t\t// check rows\r\n\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\tlet currRow = [];\r\n\t\t\tfor (let col = 0; col < board[row].length; col++) {\r\n\t\t\t\t\tcurrRow.push(board[row][col])\r\n\t\t\t}\r\n\t\t\tif (currRow.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currRow.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check cols \r\n\t\tfor (let col = 0; col < board[0].length; col++) {\r\n\t\t\tlet currCol = [];\r\n\t\t\tfor (let row = 0; row < board.length; row++) {\r\n\t\t\t\tcurrCol.push(board[row][col]);\r\n\t\t\t}\r\n\t\t\tif (currCol.every(v => v === 'X')) winner = 'X';\r\n\t\t\tif (currCol.every(v => v === 'O')) winner = 'O';\r\n\t\t}\r\n\r\n\t\t// check left diagonal\r\n\t\tlet leftDiag = [];\r\n\t\tfor (let row = 0, col = 0; row < board.length, col < board.length; row++, col++) {\r\n\t\t\t\tleftDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (leftDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (leftDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\t// check right diagonal\r\n\t\tlet rightDiag = [];\r\n\t\tfor (let row = 0, col = board.length - 1; row < board.length, col >= 0; row++, col--) {\r\n\t\t\trightDiag.push(board[row][col])\r\n\t\t}\r\n\t\tif (rightDiag.every(v => v === 'X')) winner = 'X';\r\n\t\tif (rightDiag.every(v => v === 'O')) winner = 'O';\r\n\r\n\t\tif (!this.state.winner) {\r\n\t\t\tthis.setState({\r\n\t\t\t\twinner: winner\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.state.winner) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgameOver: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconsole.log(this.state.winner)\r\n\t}\r\n\r\n\ttogglePlayer() {\r\n\t\t(this.state.currPlayer === \"X\" ? \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"O\"\r\n\t\t\t\t}) : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrPlayer: \"X\"\r\n\t\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tcreateBoard() {\r\n\t\tlet board = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push('-');\r\n\t\t\t}\r\n\t\t\tboard.push(row);\r\n\t\t} \r\n\r\n\t\treturn board;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.gameOver) {\r\n\t\t\treturn (\r\n\t\t\t\t\t<div className=\"Board Board-winner\">{this.state.winner}</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlet cells = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.N_ROWS; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor (let j = 0; j < this.props.N_COLS; j++) {\r\n\t\t\t\trow.push(\r\n\t\t\t\t\t<Cell value={this.state.board[i][j]} showValue={() => this.markCell(i, j)}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcells.push(<div>{row}</div>)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"Board Board-grid\">{cells}</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport Board from './Board'\r\nimport './UltimateBoard.css'\r\n\r\nclass UltimateBoard extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tBOARD_SIZE: 9\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet boards = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.BOARD_SIZE; i++) {\r\n\t\t\tboards.push(<Board />)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"UltimateBoard\">\r\n\t\t\t\t<h1 className=\"UltimateBoard-title\">Ultimate Tic-Tac-Toe</h1>\r\n\t\t\t\t<div className=\"UltimateBoard-container\">\r\n\t\t\t\t\t<div className=\"UltimateBoard-grid\">\r\n\t\t\t\t\t\t{boards}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UltimateBoard;","import logo from './logo.svg';\nimport './App.css';\nimport UltimateBoard from './UltimateBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <UltimateBoard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}